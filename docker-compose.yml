#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '3'

volumes:
    prometheus_data: {}
    grafana_storage: {}
    wallet: {}
    orderer: {}
    couchdb_peer0_org1: {}
    peer0_org1: {}
    couchdb_peer0_org2: {}
    peer0_org2: {}
    ca_org1: {}
    ca_org2: {}

networks:
  basic:

services:
  ca.org1.example.com:
    image: hyperledger/fabric-ca:1.4.8
    environment:
      - FABRIC_CA_HOME=/var/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca
      - FABRIC_CA_SERVER_CA_CERTFILE=/var/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/var/hyperledger/fabric-ca-server-config/key.pem
    ports:
      - 7054:7054
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./$GENERATED_FOLDER/crypto-config/peerOrganizations/org1.example.com/ca/:/var/hyperledger/fabric-ca-server-config
      - ca_org1:/var/hyperledger/fabric-ca-server
    container_name: ca.org1.example.com
    networks:
      - basic

  ca.org2.example.com:
    image: hyperledger/fabric-ca:1.4.8
    environment:
      - FABRIC_CA_HOME=/var/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca
      - FABRIC_CA_SERVER_CA_CERTFILE=/var/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/var/hyperledger/fabric-ca-server-config/key.pem
    ports:
      - 9054:9054
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./$GENERATED_FOLDER/crypto-config/peerOrganizations/org2.example.com/ca/:/var/hyperledger/fabric-ca-server-config
      - ca_org2:/var/hyperledger/fabric-ca-server
    container_name: ca.org2.example.com
    networks:
      - basic

  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:2.2.0
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_OPERATIONS_LISTENADDRESS=0.0.0.0:8443
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_METRICS_PROVIDER=prometheus
      - ORDERER_FILELEDGER_LOCATION=/var/hyperledger/production/orderer
      ## RAFT specific environment variables
      - ORDERER_CONSENSUS_SNAPDIR=/var/hyperledger/production/orderer/etcdraft/snapshot
      - ORDERER_CONSENSUS_WALDIR=/var/hyperledger/production/orderer/etcdraft/wal
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - orderer:/var/hyperledger/production/orderer
        - ./$GENERATED_FOLDER/configtx/:/etc/hyperledger/configtx
        - ./$GENERATED_FOLDER/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/:/var/hyperledger/orderer
    networks:
      - basic

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:2.2.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.example.com
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org1.example.com:7052
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:2.2.0
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/fabric/tls/ca.crt
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_DISCOVERY_ENABLED=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer0.org1.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=user
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=pass
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
      - CORE_PEER_FILESYSTEMPATH=/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7051:7051
    volumes:
        - peer0_org1:/var/hyperledger/production
        - /var/run/:/host/var/run/
        - ./$GENERATED_FOLDER/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/var/hyperledger/fabric
        - ./$GENERATED_FOLDER/configtx:/etc/hyperledger/configtx
    depends_on:
      - orderer.example.com
      - couchdb.peer0.org1.example.com
    networks:
      - basic

  couchdb.peer0.org1.example.com:
    container_name: couchdb.peer0.org1.example.com
    image: couchdb:3.1.0
    environment:
      - COUCHDB_USER=user
      - COUCHDB_PASSWORD=pass
    ports:
      - 5984:5984
    networks:
      - basic
    volumes:
      - couchdb_peer0_org1:/opt/couchdb/data

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:2.2.0
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org2.example.com
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/fabric/msp
      - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODELISTENADDRESS=peer0.org2.example.com:7052
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:2.2.0
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/fabric/tls/ca.crt
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_DISCOVERY_ENABLED=true
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.peer0.org2.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=user
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=pass
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:9443
      - CORE_METRICS_PROVIDER=prometheus
      - CORE_PEER_FILESYSTEMPATH=/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    ports:
      # published vs internal port must be the same for fabric-sdk-node's localhost discovery to function properly
      - 9051:9051
    volumes:
        - peer0_org2:/var/hyperledger/production
        - /var/run/:/host/var/run/
        - ./$GENERATED_FOLDER/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/var/hyperledger/fabric
    depends_on:
      - orderer.example.com
      - couchdb.peer0.org2.example.com
    networks:
      - basic

  couchdb.peer0.org2.example.com:
    container_name: couchdb.peer0.org2.example.com
    image: couchdb:3.1.0
    environment:
      - COUCHDB_USER=user
      - COUCHDB_PASSWORD=pass
    ports:
      - 6984:5984
    networks:
      - basic
    volumes:
      - couchdb_peer0_org2:/opt/couchdb/data

  wallet:
    image: couchdb:3.1.0
    container_name: wallet
    ports:
      - "8099:5984"
    networks:
      - basic
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=pass
    volumes:
      - wallet:/opt/couchdb/data

  prometheus:
    image: prom/prometheus:v2.13.1
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/var/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/var/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    networks:
      - basic

  grafana:
    image: grafana/grafana:6.4.1
    container_name: grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana/provisioning/:/var/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - basic
